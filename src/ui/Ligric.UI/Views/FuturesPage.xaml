<Page x:Class="Ligric.UI.Views.FuturesPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
      xmlns:controls="using:Microsoft.UI.Xaml.Controls"
	  xmlns:vm="using:Ligric.UI.ViewModels.Data"
	  xmlns:converters="using:Ligric.UI.Converters"
	  xmlns:local="using:Ligric.UI.Views"
	  
	  xmlns:i="using:Microsoft.Xaml.Interactivity"
	  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
	  
      d:Height="1334" d:Width="1334"
      Background="#FFcbcbcd">

	<Page.Resources>
		<converters:FormatStringConverter x:Key="FormatStringConverter"/>
		<converters:NullToEmptyStringConverter x:Key="NullToEmptyStringConverter"/>
		<converters:ValueToStringConverter x:Key="ValueToStringConverter"/>

		<GridLength x:Key="SideColumnWidth">7</GridLength>
	</Page.Resources>

	<Grid ColumnSpacing="20" Margin="20">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition/>
		</Grid.ColumnDefinitions>

		<!-- Left Menu -->
		<Grid x:Name="menu" Grid.Column="0" Width="300" CornerRadius="20" Background="White" BorderBrush="#1f1f1f" BorderThickness="4">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>

			<!-- Menu header -->
			<Grid Grid.Row="0" Height="40" Background="Black" CornerRadius="15" Margin="5"
				  ColumnDefinitions="Auto, *, 30, 30" Padding="25,0,13,0">
				<CheckBox x:Name="ApisCheckBox" Grid.Column="0" Style="{StaticResource AutoRunCheckBoxStyle}"
						  Checked="OnCheckAllChecked"/>

				<Button x:Name="ApisStartButton" Grid.Column="2" Width="30" Height="30" Padding="8"
						Style="{StaticResource EmptyButtonStyle}" IsEnabled="False" Click="OnApiHeaderStartButtonClicked">
					<Path Stretch="Uniform" Data="M8,5.14V19.14L19,12.14L8,5.14Z" Fill="#5CFF94"/>
				</Button>
				<Button x:Name="ApisStopButton" Grid.Column="3" Width="30" Height="30" Padding="8"
						Style="{StaticResource EmptyButtonStyle}" IsEnabled="False" Click="OnApiHeaderStopButtonClicked">
					<Path Stretch="Uniform" Data="M18,18H6V6H18V18Z" Fill="#FF5C5C"/>
				</Button>
			</Grid>

			<!-- Menu content -->
			<ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
				<controls:ItemsRepeater x:Name="ApisItemsRepeater" ItemsSource="{Binding Api.Apis}" Margin="10">
					<controls:ItemsRepeater.ItemTemplate>
						<DataTemplate>
							<Grid Background="#2c2c2c" CornerRadius="20" Height="50" Padding="20,10,20,10" HorizontalAlignment="Stretch">
								<Grid.ContextFlyout>
									<MenuFlyout>
										<MenuFlyoutSubItem Text="Share" IsEnabled="{Binding Permissions, Converter={StaticResource CheckFlagConverter}, ConverterParameter=16}">
											<MenuFlyoutSubItem.Icon>
												<FontIcon Glyph="&#xE72D;"/>
											</MenuFlyoutSubItem.Icon>

											<MenuFlyoutItem Text="Share with everyone" Click="ShareClick"/>
											<MenuFlyoutItem Text="Share to" IsEnabled="False"/>
										</MenuFlyoutSubItem>

										<MenuFlyoutSubItem Text="Delete" Icon="Delete" IsEnabled="{Binding Permissions, Converter={StaticResource CheckFlagConverter}, ConverterParameter=16}">
											<MenuFlyoutItem Text="Delete for me" Icon="Delete" IsEnabled="False"/>
											<MenuFlyoutItem Text="Delete all" Icon="Delete" IsEnabled="False"/>
										</MenuFlyoutSubItem>

										<MenuFlyoutSeparator/>
										<MenuFlyoutItem Text="Rename" IsEnabled="False"/>
										<MenuFlyoutItem Text="Select" IsEnabled="False"/>
									</MenuFlyout>
								</Grid.ContextFlyout>

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="30"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="30"/>
									<ColumnDefinition Width="30"/>
								</Grid.ColumnDefinitions>

								<CheckBox Name="ApiCheckBox" Grid.Column="0" Style="{StaticResource AutoRunCheckBoxStyle}"
										  Checked="OnApiCheckBoxChecked" Unchecked="OnApiCheckBoxUnchecked"/>

								<TextBlock Grid.Column="1" Foreground="White" Text="{Binding Name}" TextTrimming="CharacterEllipsis"
							     	       VerticalAlignment="Center" HorizontalAlignment="Left"/>

								<ToggleButton Name="ApiToggleButton" Grid.Column="3" Width="30" Height="30" Padding="8" CornerRadius="10"
											  Template="{StaticResource StartStopTemplate}"
											  Checked="OnApiToggleButtonChecked" Unchecked="OnApiToggleButtonUnchecked"/>
							</Grid>
						</DataTemplate>
					</controls:ItemsRepeater.ItemTemplate>
					<controls:ItemsRepeater.Layout>
						<controls:StackLayout Orientation="Vertical" Spacing="10"/>
					</controls:ItemsRepeater.Layout>
				</controls:ItemsRepeater>
			</ScrollViewer>

			<!-- Add new Api-->
			<Button x:Name="AddNewApiButton" Grid.Row="1" Content="New API" Height="40" Margin="20,10" CornerRadius="10" Background="#1f1f1f" Foreground="White"
                    VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
				<i:Interaction.Behaviors>
					<core:EventTriggerBehavior EventName="Click">
						<core:ChangePropertyAction TargetObject="{Binding ElementName=AddingApiPopup}" PropertyName="IsOpen" Value="True"/>
					</core:EventTriggerBehavior>
				</i:Interaction.Behaviors>
			</Button>

			<!-- Api adding popup -->
			<Popup x:Name="AddingApiPopup" Grid.RowSpan="2" IsLightDismissEnabled="True" PlacementTarget="{Binding ElementName=AddNewApiButton}" DesiredPlacement="RightEdgeAlignedBottom">
				<StackPanel x:Name="AddingApiStackPanel" Width="200" CornerRadius="20" Background="#1f1f1f" Padding="20" Spacing="5">
					<TextBox Text="{Binding Api.AddingApi.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="Name" Background="#f2f5fa" CornerRadius="10"
							 Style="{StaticResource DefaultTextBoxStyle}" Height="35" VerticalContentAlignment="Center"/>
					<TextBox Text="{Binding Api.AddingApi.PublicKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="Public Key" Background="#f2f5fa" CornerRadius="10"
							 Style="{StaticResource DefaultTextBoxStyle}" Height="35" VerticalContentAlignment="Center"/>
					<TextBox Text="{Binding Api.AddingApi.PrivateKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="Private Key" Background="#f2f5fa" CornerRadius="10"
							 Style="{StaticResource DefaultTextBoxStyle}" Height="35" VerticalContentAlignment="Center"/>

					<Button Content="Add" Height="40" CornerRadius="10"
							HorizontalAlignment="Stretch"
							Style="{StaticResource ButtonRevealStyle}"
							Background="#5946d2" Foreground="White"
							Command="{Binding Api.SaveApiCommand}"/>
				</StackPanel>
			</Popup>
		</Grid>

		<!-- Content -->
		<Grid Grid.Column="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition/>
				<RowDefinition Height="Auto"/>
				<RowDefinition/>
			</Grid.RowDefinitions>

			<Border Grid.RowSpan="4" CornerRadius="20" Background="White" BorderBrush="#1f1f1f" BorderThickness="4"/>

			<!-- Header Orders -->
			<Grid Grid.Row="0" Height="40" Background="Black" CornerRadius="15" Margin="10, 10, 10, 5" Padding="20,5,20,5">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{Binding Source={StaticResource SideColumnWidth}}"/>
					<ColumnDefinition MinWidth="100"/>
					<ColumnDefinition MinWidth="100"/>
					<ColumnDefinition MinWidth="100"/>
					<ColumnDefinition MinWidth="100"/>
					<ColumnDefinition MinWidth="100"/>
				</Grid.ColumnDefinitions>

				<TextBlock Grid.Column="1" Text="Symbol" Foreground="White" VerticalAlignment="Center"/>
				<TextBlock Grid.Column="2" Text="Amount" Foreground="White" VerticalAlignment="Center"/>
				<TextBlock Grid.Column="3" Text="Price" Foreground="White" VerticalAlignment="Center"/>
				<TextBlock Grid.Column="4" Text="Current Price" Foreground="White" VerticalAlignment="Center"/>
				<TextBlock Grid.Column="5" Text="Type" Foreground="White" VerticalAlignment="Center"/>
			</Grid>

			<!-- Orders -->
			<ScrollViewer Grid.Row="1" 
                          VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
				<controls:ItemsRepeater ItemsSource="{Binding FuturesOrders.Orders}" Margin="10">
					<controls:ItemsRepeater.ItemTemplate>
						<DataTemplate x:DataType="vm:OrderViewModel">
							<Grid Background="#222833" CornerRadius="20" Padding="20" ColumnSpacing="5">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="{Binding Source={StaticResource SideColumnWidth}}"/>
									<ColumnDefinition/>
									<ColumnDefinition/>
									<ColumnDefinition/>
									<ColumnDefinition/>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>

								<Rectangle Grid.Column="0" Margin="1,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
										   Fill="{x:Bind local:FuturesPage.SideRectangleBrushFromOrderViewModel((vm:OrderViewModel))}" />

								<TextBlock Grid.Column="1" Foreground="White" Text="{x:Bind Symbol}" VerticalAlignment="Center"/>
								<TextBlock Grid.Column="2" Foreground="White" Text="{x:Bind local:FuturesPage.CalculateAmount((vm:OrderViewModel))}" VerticalAlignment="Center"/>
								<TextBlock Grid.Column="3" Foreground="White" Text="{x:Bind Price, Converter={StaticResource FormatStringConverter}, ConverterParameter='{}{0:0.00}'}" VerticalAlignment="Center"/>
								<TextBlock Grid.Column="4" Foreground="White" Text="{x:Bind CurrentPrice, Converter={StaticResource FormatStringConverter}, ConverterParameter='{}{0:0.00}'}" VerticalAlignment="Center"/>

								<StackPanel Grid.Column="5" VerticalAlignment="Center">
									<TextBlock Foreground="White" Text="{x:Bind Type}"/>
									<TextBlock x:Name="SideTextBlock"
											   Text="{x:Bind local:FuturesPage.GetOrderSideFromOrderViewModel((vm:OrderViewModel))}"
											   Foreground="{x:Bind local:FuturesPage.SideTextBlockForegroundFromOrderViewModel((vm:OrderViewModel))}"/>
								</StackPanel>
							</Grid>
						</DataTemplate>
					</controls:ItemsRepeater.ItemTemplate>
					<controls:ItemsRepeater.Layout>
						<controls:StackLayout Orientation="Vertical" Spacing="10"/>
					</controls:ItemsRepeater.Layout>
				</controls:ItemsRepeater>
			</ScrollViewer>

			<!-- Header Positions -->
			<Grid Grid.Row="2" Height="40" Background="Black" CornerRadius="15" Margin="10" Padding="20,5,20,5" ColumnSpacing="5">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{Binding Source={StaticResource SideColumnWidth}}"/>
					<ColumnDefinition MinWidth="100"/>
					<ColumnDefinition MinWidth="100"/>
					<ColumnDefinition MinWidth="100"/>
					<ColumnDefinition MinWidth="100"/>
					<ColumnDefinition MinWidth="100"/>
				</Grid.ColumnDefinitions>

				<TextBlock Grid.Column="1" Text="Symbol" Foreground="White" VerticalAlignment="Center"/>
				<TextBlock Grid.Column="2" Text="Quantity/Size" Foreground="White" VerticalAlignment="Center"/>
				<TextBlock Grid.Column="3" Text="Entry Price" Foreground="White" VerticalAlignment="Center"/>
				<TextBlock Grid.Column="4" Text="Current Price" Foreground="White" VerticalAlignment="Center"/>
				<TextBlock Grid.Column="5" Text="PnL/ROE" Foreground="White" VerticalAlignment="Center"/>
			</Grid>

			<!-- Positions -->
			<ScrollViewer Grid.Row="3"
                          VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Auto">
				<controls:ItemsRepeater ItemsSource="{Binding FuturePositions.Positions}" Margin="10">
					<controls:ItemsRepeater.ItemTemplate>
						<DataTemplate x:DataType="vm:PositionViewModel">
							<Grid Background="#222833" CornerRadius="20" Padding="20" ColumnSpacing="5">
								<i:Interaction.Behaviors>
									<core:DataTriggerBehavior Binding="{Binding Side}" ComparisonCondition="Equal" Value="Buy">
										<core:ChangePropertyAction TargetObject="{Binding ElementName=SideRectangle}" PropertyName="Fill" Value="#5CFF94"/>
									</core:DataTriggerBehavior>
									<core:DataTriggerBehavior Binding="{Binding Side}" ComparisonCondition="Equal" Value="Sell">
										<core:ChangePropertyAction TargetObject="{Binding ElementName=SideRectangle}" PropertyName="Fill" Value="#FF5C5C"/>
									</core:DataTriggerBehavior>
								</i:Interaction.Behaviors>

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="{Binding Source={StaticResource SideColumnWidth}}"/>
									<ColumnDefinition MinWidth="100"/>
									<ColumnDefinition MinWidth="100"/>
									<ColumnDefinition MinWidth="100"/>
									<ColumnDefinition MinWidth="100"/>
									<ColumnDefinition MinWidth="100"/>
								</Grid.ColumnDefinitions>

								<Rectangle x:Name="SideRectangle" Grid.Column="0" Margin="1,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

								<StackPanel Grid.Column="1" Orientation="Horizontal">
									<TextBlock Foreground="White" Text="{Binding Symbol}" VerticalAlignment="Center"/>
									<Border Background="#4A5E75" CornerRadius="5" VerticalAlignment="Center" Padding="3" MinWidth="20">
										<TextBlock Foreground="White" FontSize="11" HorizontalAlignment="Center" VerticalAlignment="Center"
												   Text="{Binding Leverage, Converter={StaticResource FormatStringConverter}, ConverterParameter='{}{0:0}x'}"/>
									</Border>
								</StackPanel>

								<StackPanel Grid.Column="2" VerticalAlignment="Center">
									<TextBlock Foreground="White" Text="{Binding QuoteQuantity, Converter={StaticResource FormatStringConverter}, ConverterParameter='{}{0:0.00}'}" VerticalAlignment="Center"/>
									<TextBlock x:Name="SizeTextBlock" Foreground="White" Text="{Binding Size, Converter={StaticResource FormatStringConverter}, ConverterParameter='{}{0:0.00}'}" VerticalAlignment="Center">
										<i:Interaction.Behaviors>
											<core:DataTriggerBehavior Binding="{Binding Size, Converter={StaticResource NullToEmptyStringConverter}}" ComparisonCondition="Equal" Value="">
												<core:ChangePropertyAction TargetObject="{Binding ElementName=SizeTextBlock}" PropertyName="Foreground" Value="White"/>
											</core:DataTriggerBehavior>
											
											<core:DataTriggerBehavior Binding="{Binding Size, Converter={StaticResource ValueToStringConverter}}" ComparisonCondition="GreaterThan" Value="0">
												<core:ChangePropertyAction TargetObject="{Binding ElementName=SizeTextBlock}" PropertyName="Foreground" Value="#5CFF94"/>
											</core:DataTriggerBehavior>

											<core:DataTriggerBehavior Binding="{Binding Size, Converter={StaticResource ValueToStringConverter}}" ComparisonCondition="LessThan" Value="0">
												<core:ChangePropertyAction TargetObject="{Binding ElementName=SizeTextBlock}" PropertyName="Foreground" Value="#FF5C5C"/>
											</core:DataTriggerBehavior>
											
											<core:DataTriggerBehavior Binding="{Binding Size, Converter={StaticResource ValueToStringConverter}}" ComparisonCondition="Equal" Value="0.00">
												<core:ChangePropertyAction TargetObject="{Binding ElementName=SizeTextBlock}" PropertyName="Foreground" Value="White"/>
											</core:DataTriggerBehavior>
										</i:Interaction.Behaviors>
									</TextBlock>
								</StackPanel>

								<TextBlock Grid.Column="3" Foreground="White" Text="{Binding EntryPrice, Converter={StaticResource FormatStringConverter}, ConverterParameter='{}{0:0.00}'}" VerticalAlignment="Center"/>
								<TextBlock Grid.Column="4" Foreground="White" Text="{Binding CurrentPrice, Converter={StaticResource FormatStringConverter}, ConverterParameter='{}{0:0.00}'}" VerticalAlignment="Center"/>

								<StackPanel Grid.Column="5" VerticalAlignment="Center">
									<TextBlock x:Name="PnLTextBlock" Foreground="White" Text="{Binding PnL, Converter={StaticResource FormatStringConverter}, ConverterParameter='{}{0:+0.00;-0.00;0.00} USDT'}">
										<i:Interaction.Behaviors>
											<core:DataTriggerBehavior Binding="{Binding PnL, Converter={StaticResource NullToEmptyStringConverter}}" ComparisonCondition="Equal" Value="">
												<core:ChangePropertyAction TargetObject="{Binding ElementName=PnLTextBlock}" PropertyName="Foreground" Value="White"/>
											</core:DataTriggerBehavior>
											
											<core:DataTriggerBehavior Binding="{Binding PnL, Converter={StaticResource ValueToStringConverter}}" ComparisonCondition="GreaterThan" Value="0">
												<core:ChangePropertyAction TargetObject="{Binding ElementName=PnLTextBlock}" PropertyName="Foreground" Value="#5CFF94"/>
											</core:DataTriggerBehavior>

											<core:DataTriggerBehavior Binding="{Binding PnL, Converter={StaticResource ValueToStringConverter}}" ComparisonCondition="LessThan" Value="0">
												<core:ChangePropertyAction TargetObject="{Binding ElementName=PnLTextBlock}" PropertyName="Foreground" Value="#FF5C5C"/>
											</core:DataTriggerBehavior>
											
											<core:DataTriggerBehavior Binding="{Binding PnL, Converter={StaticResource ValueToStringConverter}}" ComparisonCondition="Equal" Value="0.00">
												<core:ChangePropertyAction TargetObject="{Binding ElementName=PnLTextBlock}" PropertyName="Foreground" Value="White"/>
											</core:DataTriggerBehavior>
										</i:Interaction.Behaviors>
									</TextBlock>
									<TextBlock x:Name="ROETextBlock" Foreground="White" Text="{Binding PnLPercent, Converter={StaticResource FormatStringConverter}, ConverterParameter='{}{0:+0.00;-0.00;0.00} %'}">
										<i:Interaction.Behaviors>
											<core:DataTriggerBehavior Binding="{Binding PnLPercent, Converter={StaticResource NullToEmptyStringConverter}}" ComparisonCondition="Equal" Value="">
												<core:ChangePropertyAction TargetObject="{Binding ElementName=ROETextBlock}" PropertyName="Foreground" Value="White"/>
											</core:DataTriggerBehavior>
											
											<core:DataTriggerBehavior Binding="{Binding PnLPercent, Converter={StaticResource ValueToStringConverter}}" ComparisonCondition="GreaterThan" Value="0">
												<core:ChangePropertyAction TargetObject="{Binding ElementName=ROETextBlock}" PropertyName="Foreground" Value="#5CFF94"/>
											</core:DataTriggerBehavior>

											<core:DataTriggerBehavior Binding="{Binding PnLPercent, Converter={StaticResource ValueToStringConverter}}" ComparisonCondition="LessThan" Value="0">
												<core:ChangePropertyAction TargetObject="{Binding ElementName=ROETextBlock}" PropertyName="Foreground" Value="#FF5C5C"/>
											</core:DataTriggerBehavior>
											
											<core:DataTriggerBehavior Binding="{Binding PnLPercent, Converter={StaticResource ValueToStringConverter}}" ComparisonCondition="Equal" Value="0.0">
												<core:ChangePropertyAction TargetObject="{Binding ElementName=ROETextBlock}" PropertyName="Foreground" Value="White"/>
											</core:DataTriggerBehavior>
										</i:Interaction.Behaviors>
									</TextBlock>
								</StackPanel>
							</Grid>
						</DataTemplate>
					</controls:ItemsRepeater.ItemTemplate>
					<controls:ItemsRepeater.Layout>
						<controls:StackLayout Orientation="Vertical" Spacing="10"/>
					</controls:ItemsRepeater.Layout>
				</controls:ItemsRepeater>
			</ScrollViewer>
		</Grid>

		<Button Grid.ColumnSpan="2" Style="{StaticResource TransparentPathIconButtonStyle}"
				Width="80" Height="80" Margin="10" CornerRadius="40"
				Foreground="White" Background="#5946D2" 
				HorizontalAlignment="Right" VerticalAlignment="Bottom"
				Command="{Binding LogoutCommand}"
				Content="M3 3C2.44772 3 2 3.44772 2 4V16C2 16.5523 2.44772 17 3 17C3.55228 17 4 16.5523 4 16V4C4 3.44772 3.55228 3 3 3ZM13.2929 12.2929C12.9024 12.6834 12.9024 13.3166 13.2929 13.7071C13.6834 14.0976 14.3166 14.0976 14.7071 13.7071L17.7071 10.7071C17.8946 10.5196 18 10.2652 18 10C18 9.73478 17.8946 9.48043 17.7071 9.29289L14.7071 6.29289C14.3166 5.90237 13.6834 5.90237 13.2929 6.29289C12.9024 6.68342 12.9024 7.31658 13.2929 7.70711L14.5858 9L7 9C6.44771 9 6 9.44772 6 10C6 10.5523 6.44772 11 7 11H14.5858L13.2929 12.2929Z"/>
	</Grid>
</Page>
